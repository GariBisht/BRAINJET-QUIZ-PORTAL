{"version":3,"sources":["./src/app/home-app-quiz/home-app-quiz.component.ts","./src/app/home-app-quiz/home-app-quiz.component.html","./src/app/game-app-quiz/quiz-section/quiz-section.component.html","./src/app/game-app-quiz/quiz-section/quiz-section.component.ts","./src/app/service/open-trivia-db.service.ts","./src/environments/environment.ts","./src/app/Pipe/decodeHTML.ts","./src/app/game-app-quiz/game-app-quiz.component.ts","./src/app/game-app-quiz/game-app-quiz.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/highscore-app-quiz/highscore-app-quiz.component.ts","./src/app/highscore-app-quiz/highscore-app-quiz.component.html","./src/app/end-app-quiz/end-app-quiz.component.ts","./src/app/end-app-quiz/end-app-quiz.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home-app-quiz',\n  templateUrl: './home-app-quiz.component.html',\n  styleUrls: ['./home-app-quiz.component.css'],\n})\nexport class HomeAppQuizComponent implements OnInit {\n  title = 'GEHU Haldwani Quiz Portal';\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"container\">\n  <div id=\"home\" class=\"flex-center flex-column\">\n    <h1>{{ title }}</h1>\n    <button\n      mat-raised-button\n      color=\"primary\"\n      [routerLink]=\"'game'\"\n      class=\"btn\"\n    >\n      Play\n    </button><br><br><br><br>\n\t<footer>\n&copy; 2nd Semester Mini Project by Himanshu Chandola , Nikhil Joshi , Garima Bisht & Bhuwan Chandra Tiwari\n  </footer>\n    <!-- <button\n      mat-raised-button\n      color=\"accent\"\n      [routerLink]=\"'highscore'\"\n      class=\"btn\"\n      disabled\n    >\n      Highscore\n    </button> -->\n  </div>\n</div>\n\n","<div id=\"game\" class=\"justify-center flex-column\">\n  <!-- HUD -->\n  <div id=\"hud\">\n    <div id=\"hud-item\" class=\"justify-center\">\n      <p class=\"progressText\">Question {{questionCounter}} of {{MAX_QUESTIONS}} </p>\n      <div class=\"col-progressBar\">\n        <mat-progress-bar class=\"progressBar\" color=\"primary\" mode=\"determinate\" [value]=\"progressBar\">\n        </mat-progress-bar>\n      </div>\n    </div>\n    <div id=\"hud-item\" class=\"justify-center\">\n      <p class=\"scoreText\">Score</p>\n      <h2 class=\"scoreProgress\">{{ score }}</h2>\n    </div>\n  </div>\n  <!-- QUESTION -->\n  <mat-card>\n    <ng-container *ngIf=\"isLoading else game\">\n      <div class=\"spinnerDiv\">\n        <mat-spinner></mat-spinner>\n      </div>\n    </ng-container>\n    <ng-template #game>\n      <h3 id=\"question\">{{ questionText | decodeHtml }}</h3>\n      <div class=\"choice-container\" (click)=\"chooseAnswer(1)\">\n        <p class=\"choice-prefix\">A</p>\n        <p class=\"choice-text\">{{ currentQuestion.choice1 | decodeHtml }}</p>\n      </div>\n      <div class=\"choice-container\" (click)=\"chooseAnswer(2)\">\n        <p class=\"choice-prefix\">B</p>\n        <p class=\"choice-text\">{{ currentQuestion.choice2 | decodeHtml }}</p>\n      </div>\n      <div class=\"choice-container\" (click)=\"chooseAnswer(3)\">\n        <p class=\"choice-prefix\">C</p>\n        <p class=\"choice-text\">{{ currentQuestion.choice3 | decodeHtml }}</p>\n      </div>\n      <div class=\"choice-container\" (click)=\"chooseAnswer(4)\">\n        <p class=\"choice-prefix\">D</p>\n        <p class=\"choice-text\">{{ currentQuestion.choice4 | decodeHtml }}</p>\n      </div>\n    </ng-template>\n  </mat-card>\n</div>\n","import { Component, Input, OnInit, Renderer2 } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OpenTriviaDbService } from 'src/app/service/open-trivia-db.service';\n\n@Component({\n  selector: 'app-quiz-section',\n  templateUrl: './quiz-section.component.html',\n  styleUrls: ['./quiz-section.component.css']\n})\nexport class QuizSectionComponent implements OnInit {\n  @Input('selectedCategory') category:any = null;\n  @Input('selectedDifficulty') difficulty: any = null;\n\n  isLoading = false;\n  isAcceptingAnswer = false;\n\n  questions: any = []\n\n  currentQuestion: any;\n  availableQuestions: any;\n  score = 0;\n  questionCounter = 0;\n\n  CORRECT_BONUS = 10;\n  MAX_QUESTIONS = 5;\n\n  progressBar: any;\n  questionText: any;\n  scoreText = 0;\n\n  constructor(\n    private router: Router,\n    private render: Renderer2,\n    private apiDB: OpenTriviaDbService,\n  ) { }\n\n  ngOnInit(): void {\n    this.checkOptionsSelected();\n  }\n\n  checkOptionsSelected() {\n    if (this.category['null'] && this.difficulty['null']) { return }\n    else {\n      this.getQuestion();\n    }\n  }\n\n  getQuestion() {\n    this.isLoading = true;\n    this.apiDB.getQuiz(this.category, this.difficulty).subscribe((resp: any) => {\n      // console.log(resp);\n      this.questions = resp.results.map((res: any) => {\n        // Tampung dulu question-nya terus buat answer dengan index random\n        let ans: any = {\n          question: res.question,\n          answer: Math.floor(Math.random() * 4) + 1, // membuat pointer untuk answer\n        };\n\n        // tampung juga incorrect_answer\n        const answerQuestion = [...res.incorrect_answers];\n\n        // masukkan correct_answer ke array answerQuestion dengan pointer dari array ans.answer\n        answerQuestion.splice(ans.answer - 1, 0, res.correct_answer);\n\n        answerQuestion.forEach((choices: any, index) => {\n          return ans[\"choice\" + (index + 1)] = choices\n          /*\n            buat nama item array dengan choice + (index + 1)\n            jadi misal indexnya = 0 maka, 0 + 1 = 1\n            maka hasilnya choice1, choice2, dst.\n            kemudian return ke object ans\n          */\n        });\n        return ans\n      });\n      this.startGame();\n      this.isLoading = false;\n      console.log(this.questions);\n    });\n  }\n\n  startGame() {\n    this.questionCounter = 0;\n    this.score = 0;\n    this.availableQuestions = [... this.questions];\n    this.getNewQuestion();\n  };\n\n  getNewQuestion() {\n    if (this.availableQuestions.length === 0 || this.questionCounter >= this.MAX_QUESTIONS) {\n      // pergi ke halaman terahir\n      this.router.navigate(['result']);\n    }\n    this.questionCounter++;\n\n    // update progress bar\n    this.progressBar = (this.questionCounter / this.MAX_QUESTIONS) * 100;\n\n    //  buat pointer untuk soal saat ini\n    const questionIndex = Math.floor(Math.random() * this.availableQuestions.length);\n\n    //  pilih soal saat ini berdasarkan soal yang tersedia menggunakan pointer questionIndex\n    this.currentQuestion = this.availableQuestions[questionIndex];\n    this.questionText = this.currentQuestion.question;\n    // console.log(this.currentQuestion.answer);\n\n    this.availableQuestions.splice(questionIndex, 1);\n\n    this.isAcceptingAnswer = true;\n  };\n\n  chooseAnswer(data: number) {\n    if (!this.isAcceptingAnswer) { return }\n    this.isAcceptingAnswer = false;\n\n    const target = event?.target;\n    const classs = this.currentQuestion.answer === data ? \"correct\" : \"incorrect\"\n\n    // to increment Score number in HUD\n    if (classs === 'correct') {\n      this.incrementScore(this.CORRECT_BONUS);\n      this.apiDB.setScore(this.score);\n    }\n    // to relfect if the selected choice correct or incorrect\n    this.render.addClass(target, classs);\n\n    setTimeout(() => {\n      this.render.removeClass(target, classs);\n      this.getNewQuestion();\n    }, 1000);\n  }\n\n  incrementScore(correct: number) {\n    this.score += correct;\n  }\n}\n","import { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class OpenTriviaDbService {\n  private score = new BehaviorSubject<any>(0);\n  questionURL = \"https://opentdb.com/api.php?amount=10&type=multiple\";\n\n  setScore(points: number) {\n    this.score.next(points);\n  }\n\n  getScore() {\n    return this.score.value;\n  }\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  getCategories() {\n    const categoriesURL = 'https://opentdb.com/api_category.php';\n    return this.http.get(categoriesURL, {responseType: 'json'}).pipe(\n      catchError(this.handleError('getCategories', []))\n    );\n  }\n\n  getQuiz(category:number, difficulty:string) {\n    return this.http.get(this.questionURL + '&category=' + `${category}` + '&difficulty=' + `${difficulty}`, { responseType: 'json' }).pipe(\n      catchError(this.handleError('getQuiz', []))\n    );\n  }\n\n  private handleError(operation = 'operation', result?: any) {\n    return (error: any) => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result);\n    };\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Pipe, PipeTransform } from \"@angular/core\";\n\n@Pipe({ name: \"decodeHtml\" })\n\nexport class DecodeHTMLString implements PipeTransform {\n  transform(value: string) {\n    const tempElement = document.createElement(\"p\")\n    tempElement.innerHTML = value\n    return tempElement.innerText\n  }\n}\n","import { Component, OnInit, Renderer2 } from '@angular/core';\nimport { OpenTriviaDbService } from '../service/open-trivia-db.service';\nimport { Router } from '@angular/router';\nimport { FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-game-app-quiz',\n  templateUrl: './game-app-quiz.component.html',\n  styleUrls: ['./game-app-quiz.component.css']\n})\nexport class GameAppQuizComponent implements OnInit {\n\n  categories = new FormControl('', Validators.required);\n  difficulty = new FormControl('', Validators.required);\n\n  difficultyData = [\n    {name: 'Easy', type: 'easy'},\n    {name: 'Medium', type: 'medium'},\n    {name: 'Hard', type: 'hard'},\n  ];\n  categoriesData: any;\n\n  selectedCategory: any;\n  selectedDifficulty: any;\n\n  isOptionSelected = false;\n\n  constructor(\n    private apiDB: OpenTriviaDbService,\n    private router: Router,\n    private render: Renderer2,\n  ) {\n  }\n\n  ngOnInit() {\n    this.getCategories();\n  }\n\n  getCategories() {\n    this.apiDB.getCategories().subscribe((resp: any) => {\n      console.log(resp);\n      this.categoriesData = resp.trivia_categories.map((res: any) => {\n        let id = res.id;\n        let name = res.name;\n        // console.log(id, name);\n        return {id, name}\n      });\n      console.log(this.categoriesData);\n    });\n  }\n\n  playGame() {\n    if (this.categories.value !== '' && this.difficulty.value !== '') {\n      this.isOptionSelected = true;\n    }\n  }\n\n  selectCategory() {\n    this.selectedCategory = this.categories.value;\n  }\n\n  selectDifficulty() {\n    this.selectedDifficulty = this.difficulty.value;\n  }\n}\n","<div class=\"container justify-center\">\n  <div *ngIf=\"!isOptionSelected; else game\">\n    <mat-card  >\n      <h3 class=\"title\">Welcome to GEHU Haldwani Quiz Portal <br><br><br><br> Developed by Team of Himanshu, Garima, Nikhil, Bhuwan <br><br><br><br>Please choose a category and difficulty before playing</h3>\n      <div class=\"flex justify-center\">\n        <mat-form-field appearance=\"fill\" class=\"select-field\">\n          <mat-label>Choose Category</mat-label>\n          <mat-select [formControl]=\"categories\"\n          (selectionChange)=\"selectCategory()\">\n            <mat-option>None</mat-option>\n            <mat-option *ngFor=\"let category of categoriesData\" [value]=\"category.id\">\n              {{ category.name }}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"categories.hasError('required')\">You must make a selection</mat-error>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"select-field\">\n          <mat-label>Choose Difficulty</mat-label>\n          <mat-select [formControl]=\"difficulty\"\n          (selectionChange)=\"selectDifficulty()\">\n            <mat-option>None</mat-option>\n            <mat-option *ngFor=\"let dif of difficultyData\" [value]=\"dif.type\">\n              {{ dif.name }}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"difficulty.hasError('required')\">You must make a selection</mat-error>\n        </mat-form-field>\n      </div>\n      <div class=\"pad\">\n        <button\n          mat-raised-button\n          class=\"btnHoverEffect\"\n          color=\"primary\"\n          (click)=\"playGame()\"\n          [disabled]=\"!(categories.valid && difficulty.valid)\"\n        >\n          Let's Go!\n        </button>\n      </div>\n    </mat-card>\n  </div><br><br>\n<footer>\n&copy; 2nd Semester Mini Project by Himanshu Chandola , Nikhil Joshi , Garima Bisht & Bhuwan Chandra Tiwari\n  </footer>\n  <ng-template #game>\n    <div style=\"height: 100%;\">\n      <app-quiz-section\n      [selectedCategory]=\"selectedCategory\"\n      [selectedDifficulty]=\"selectedDifficulty\"\n      ></app-quiz-section>\n    </div>\n  </ng-template>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {}\n","<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HomeAppQuizComponent } from './home-app-quiz/home-app-quiz.component';\nimport { GameAppQuizComponent } from './game-app-quiz/game-app-quiz.component';\nimport { HighscoreAppQuizComponent } from './highscore-app-quiz/highscore-app-quiz.component';\nimport { EndAppQuizComponent } from './end-app-quiz/end-app-quiz.component';\nimport { QuizSectionComponent } from './game-app-quiz/quiz-section/quiz-section.component';\nimport { DecodeHTMLString } from './Pipe/decodeHTML';\n\n// Material Angular //\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatSelectModule } from '@angular/material/select';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeAppQuizComponent,\n    GameAppQuizComponent,\n    HighscoreAppQuizComponent,\n    EndAppQuizComponent,\n    DecodeHTMLString,\n    QuizSectionComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatProgressSpinnerModule,\n    MatProgressBarModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatTooltipModule,\n    MatSelectModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-highscore-app-quiz',\n  templateUrl: './highscore-app-quiz.component.html',\n  styleUrls: ['./highscore-app-quiz.component.css']\n})\nexport class HighscoreAppQuizComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>highscore-app-quiz works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { OpenTriviaDbService } from '../service/open-trivia-db.service';\n\n@Component({\n  selector: 'app-end-app-quiz',\n  templateUrl: './end-app-quiz.component.html',\n  styleUrls: ['./end-app-quiz.component.css']\n})\nexport class EndAppQuizComponent implements OnInit {\n\n  score = 0;\n\n  constructor(private apiDB: OpenTriviaDbService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.score = this.apiDB.getScore();\n    console.log(this.score);\n  }\n\n  goToHome() {\n    this.router.navigate(['']);\n    this.apiDB.setScore(0);\n  }\n\n  goToGame() {\n    this.router.navigate(['game']);\n    this.apiDB.setScore(0);\n  }\n}\n","<div class=\"container\">\n  <div class=\"col\">\n    <div class=\"row\">\n      <div id=\"score\">\n        <h2 class=\"congratsText\">Congratulation!</h2>\n        <p class=\"scoreText\">Your score is : <span>{{ score }}</span> </p>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"margin-10\">\n        <button\n        id=\"playAgainBtn\"\n        mat-raised-button\n        class=\"btnHoverEffect\"\n        color=\"primary\"\n        (click)=\"goToGame()\">\n          Play Again\n        </button>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"margin-10\">\n        <button\n        id=\"homeBtn\"\n        mat-raised-button\n        class=\"btnHoverEffect\"\n        color=\"accent\"\n        (click)=\"goToHome()\">\n          Homepage\n        </button>\n      </div>\n    </div><br><br><br><br>\n\t<footer>\n&copy; 2nd Semester Mini Project by Himanshu Chandola , Nikhil Joshi , Garima Bisht & Bhuwan Chandra Tiwari\n  </footer>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EndAppQuizComponent } from './end-app-quiz/end-app-quiz.component';\nimport { GameAppQuizComponent } from './game-app-quiz/game-app-quiz.component';\nimport { HighscoreAppQuizComponent } from './highscore-app-quiz/highscore-app-quiz.component';\nimport { HomeAppQuizComponent } from './home-app-quiz/home-app-quiz.component';\n\nconst routes: Routes = [\n  {path: '', component: HomeAppQuizComponent},\n  {path: 'game', component: GameAppQuizComponent},\n  {path: 'highscore', component: HighscoreAppQuizComponent},\n  {path: 'result', component: EndAppQuizComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}